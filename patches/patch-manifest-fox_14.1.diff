diff --git a/core/Makefile b/core/Makefile
--- a/core/Makefile
+++ b/core/Makefile
@@ -1705,6 +1705,40 @@ $(INSTALLED_VENDOR_BOOTIMAGE_TARGET): $(AVBTOOL) $(BOARD_AVB_VENDOR_BOOTIMAGE_KE
 	   $(call get-partition-size-argument,$(BOARD_VENDOR_BOOTIMAGE_PARTITION_SIZE)) \
 	   --partition_name vendor_boot $(INTERNAL_AVB_VENDOR_BOOT_SIGNING_ARGS) \
 	   $(BOARD_AVB_VENDOR_BOOT_ADD_HASH_FOOTER_ARGS)
+
+
+# Darth9 - vendor_boot
+ifneq ($(NOT_ORANGEFOX),1)
+	$(BASH) $(FOX_VENDOR) FOX_VENDOR_CMD="Fox_After_Recovery_Image" \
+  	FOX_MANIFEST_VER="14.1" \
+  	BOARD_BOOT_HEADER_VERSION="$(BOARD_BOOT_HEADER_VERSION)" \
+  	TARGET_ARCH="$(TARGET_ARCH)" \
+	TARGET_RECOVERY_ROOT_OUT="$(TARGET_RECOVERY_ROOT_OUT)" \
+	TARGET_VENDOR_RAMDISK_OUT="$(TARGET_VENDOR_RAMDISK_OUT)" \
+	MKBOOTIMG="$(MKBOOTIMG)" \
+	MKBOOTFS="$(MKBOOTFS)" \
+	INTERNAL_RECOVERYIMAGE_ARGS='"$(INTERNAL_RECOVERYIMAGE_ARGS)"' \
+	INTERNAL_MKBOOTIMG_VERSION_ARGS="$(INTERNAL_MKBOOTIMG_VERSION_ARGS)" \
+	BOARD_MKBOOTIMG_ARGS='"$(BOARD_MKBOOTIMG_ARGS)"' \
+	TARGET_OUT="$(TARGET_OUT)" \
+  	COMPRESSION_COMMAND="$(COMPRESSION_COMMANDR)" \
+  	INSTALLED_RECOVERYIMAGE_TARGET="$(INSTALLED_RECOVERYIMAGE_TARGET)" \
+  	INSTALLED_BOOTIMAGE_TARGET="$(INSTALLED_BOOTIMAGE_TARGET)" \
+  	BOARD_BOOTIMAGE_PARTITION_SIZE=$(BOARD_BOOTIMAGE_PARTITION_SIZE) \
+  	BOARD_RECOVERYIMAGE_PARTITION_SIZE=$(BOARD_RECOVERYIMAGE_PARTITION_SIZE) \
+  	BOARD_USES_RECOVERY_AS_BOOT=$(BOARD_USES_RECOVERY_AS_BOOT) \
+  	INTERNAL_KERNEL_CMDLINE="$(INTERNAL_KERNEL_CMDLINE)" \
+  	vendor_ramdisk="$(INTERNAL_VENDOR_RAMDISK_TARGET)" \
+  	INSTALLED_VENDOR_BOOTIMAGE_TARGET="$(INSTALLED_VENDOR_BOOTIMAGE_TARGET)" \
+  	BOARD_VENDOR_BOOTIMAGE_PARTITION_SIZE=$(BOARD_VENDOR_BOOTIMAGE_PARTITION_SIZE) \
+	INTERNAL_VENDOR_BOOTIMAGE_ARGS='"$(INTERNAL_VENDOR_BOOTIMAGE_ARGS)"' \
+  	BOARD_INCLUDE_RECOVERY_RAMDISK_IN_VENDOR_BOOT=$(BOARD_INCLUDE_RECOVERY_RAMDISK_IN_VENDOR_BOOT) \
+  	BOARD_MOVE_RECOVERY_RESOURCES_TO_VENDOR_BOOT=$(BOARD_MOVE_RECOVERY_RESOURCES_TO_VENDOR_BOOT) \
+  	ORANGEFOX_CALLING_CARD="1.0" \
+  	recovery_ramdisk="$(recovery_ramdisk)"
+endif
+# Darth9 - vendor_boot
+
 else
 $(INSTALLED_VENDOR_BOOTIMAGE_TARGET):
 	$(call pretty,"Target vendor_boot image: $@")
@@ -2739,6 +2773,35 @@ $(INTERNAL_RECOVERY_RAMDISK_FILES_TIMESTAMP): $(MKBOOTFS) \
 	# Use rsync because "cp -Rf" fails to overwrite broken symlinks on Mac.
 	rsync -a --exclude=sdcard $(IGNORE_RECOVERY_SEPOLICY) $(IGNORE_CACHE_LINK) $(TARGET_ROOT_OUT) $(TARGET_RECOVERY_OUT)
 	# Modifying ramdisk contents...
+
+
+# Darth9
+ifneq ($(NOT_ORANGEFOX),1)
+	$(BASH) $(FOX_VENDOR) FOX_VENDOR_CMD="Fox_Before_Recovery_Image" \
+  	FOX_MANIFEST_VER="14.1" \
+  	BOARD_BOOT_HEADER_VERSION="$(BOARD_BOOT_HEADER_VERSION)" \
+  	TARGET_ARCH="$(TARGET_ARCH)" \
+	TARGET_RECOVERY_ROOT_OUT="$(TARGET_RECOVERY_ROOT_OUT)" \
+	TARGET_VENDOR_RAMDISK_OUT="$(TARGET_VENDOR_RAMDISK_OUT)" \
+	MKBOOTIMG="$(MKBOOTIMG)" \
+	MKBOOTFS="$(MKBOOTFS)" \
+	INTERNAL_RECOVERYIMAGE_ARGS='"$(INTERNAL_RECOVERYIMAGE_ARGS)"' \
+	INTERNAL_MKBOOTIMG_VERSION_ARGS="$(INTERNAL_MKBOOTIMG_VERSION_ARGS)" \
+	BOARD_MKBOOTIMG_ARGS='"$(BOARD_MKBOOTIMG_ARGS)"' \
+	TARGET_OUT="$(TARGET_OUT)" \
+  	COMPRESSION_COMMAND="$(COMPRESSION_COMMAND)" \
+  	INSTALLED_RECOVERYIMAGE_TARGET="$(INSTALLED_RECOVERYIMAGE_TARGET)" \
+  	BOARD_BOOTIMAGE_PARTITION_SIZE=$(BOARD_BOOTIMAGE_PARTITION_SIZE) \
+  	BOARD_RECOVERYIMAGE_PARTITION_SIZE=$(BOARD_RECOVERYIMAGE_PARTITION_SIZE) \
+  	BOARD_USES_RECOVERY_AS_BOOT=$(BOARD_USES_RECOVERY_AS_BOOT) \
+  	INTERNAL_KERNEL_CMDLINE="$(INTERNAL_KERNEL_CMDLINE)" \
+  	BOARD_INCLUDE_RECOVERY_RAMDISK_IN_VENDOR_BOOT=$(BOARD_INCLUDE_RECOVERY_RAMDISK_IN_VENDOR_BOOT) \
+  	BOARD_MOVE_RECOVERY_RESOURCES_TO_VENDOR_BOOT=$(BOARD_MOVE_RECOVERY_RESOURCES_TO_VENDOR_BOOT) \
+  	ORANGEFOX_CALLING_CARD="2.0" \
+  	recovery_ramdisk="$(recovery_ramdisk)"
+endif
+# Darth9
+
 	ln -sf /system/bin/init $(TARGET_RECOVERY_ROOT_OUT)/init
 	# Removes $(TARGET_RECOVERY_ROOT_OUT)/init*.rc EXCEPT init.recovery*.rc.
 	find $(TARGET_RECOVERY_ROOT_OUT) -maxdepth 1 -name 'init*.rc' -type f -not -name "init.recovery.*.rc" | xargs rm -f
@@ -2758,10 +2821,11 @@ $(INTERNAL_RECOVERY_RAMDISK_FILES_TIMESTAMP): $(MKBOOTFS) \
 	$(if $(strip $(recovery_wipe)), \
 	  cp -f $(recovery_wipe) $(TARGET_RECOVERY_ROOT_OUT)/system/etc/recovery.wipe)
 	ln -sf prop.default $(TARGET_RECOVERY_ROOT_OUT)/default.prop
+
 	# Silence warnings in first_stage_console.
 	touch $(TARGET_RECOVERY_ROOT_OUT)/linkerconfig/ld.config.txt
-	cd $(TARGET_RECOVERY_ROOT_OUT) && touch ramdisk-files.txt && touch ramdisk-files.sha256sum && find . | sed "s/.\///" | sed "/lib\/modules\//d" > ramdisk-files.txt
-	cd $(TARGET_RECOVERY_ROOT_OUT) && find -type f | sed "s/.\/ramdisk-files.sha256sum//" | sed "/lib\/modules/d" | sed "/prop.default/d" | xargs sha256sum > ramdisk-files.sha256sum
+	cd $(TARGET_RECOVERY_ROOT_OUT) && touch ramdisk-files.txt && touch ramdisk-files.sha256sum && find . | sed "s/.\///" > ramdisk-files.txt
+	cd $(TARGET_RECOVERY_ROOT_OUT) && find -type f | sed "s/.\/ramdisk-files.sha256sum//" | sed "/prop.default/d" | xargs sha256sum > ramdisk-files.sha256sum
 	$(BOARD_RECOVERY_IMAGE_PREPARE)
 	$(hide) touch $@
 
@@ -2823,6 +2887,32 @@ $(INSTALLED_BOOTIMAGE_TARGET): $(recoveryimage-deps)
 	$(call pretty,"Target boot image from recovery: $@")
 	$(call build-recoveryimage-target, $@, $(PRODUCT_OUT)/$(subst .img,,$(subst boot,kernel,$(notdir $@))))
 
+# Darth9 (recovery-as-boot)
+ifneq ($(NOT_ORANGEFOX),1)
+	$(BASH) $(FOX_VENDOR) FOX_VENDOR_CMD="Fox_After_Recovery_Image" \
+  	FOX_MANIFEST_VER="14.1" \
+  	BOARD_BOOT_HEADER_VERSION="$(BOARD_BOOT_HEADER_VERSION)" \
+  	TARGET_ARCH="$(TARGET_ARCH)" \
+	TARGET_RECOVERY_ROOT_OUT="$(TARGET_RECOVERY_ROOT_OUT)" \
+	TARGET_VENDOR_RAMDISK_OUT="$(TARGET_VENDOR_RAMDISK_OUT)" \
+	MKBOOTIMG="$(MKBOOTIMG)" \
+	MKBOOTFS="$(MKBOOTFS)" \
+	INTERNAL_RECOVERYIMAGE_ARGS='"$(INTERNAL_RECOVERYIMAGE_ARGS)"' \
+	INTERNAL_MKBOOTIMG_VERSION_ARGS="$(INTERNAL_MKBOOTIMG_VERSION_ARGS)" \
+	BOARD_MKBOOTIMG_ARGS='"$(BOARD_MKBOOTIMG_ARGS)"' \
+	TARGET_OUT="$(TARGET_OUT)" \
+  	COMPRESSION_COMMAND="$(COMPRESSION_COMMAND)" \
+  	INSTALLED_RECOVERYIMAGE_TARGET="$(INSTALLED_RECOVERYIMAGE_TARGET)" \
+  	INSTALLED_BOOTIMAGE_TARGET="$(INSTALLED_BOOTIMAGE_TARGET)" \
+  	BOARD_BOOTIMAGE_PARTITION_SIZE=$(BOARD_BOOTIMAGE_PARTITION_SIZE) \
+  	BOARD_RECOVERYIMAGE_PARTITION_SIZE=$(BOARD_RECOVERYIMAGE_PARTITION_SIZE) \
+  	BOARD_USES_RECOVERY_AS_BOOT=$(BOARD_USES_RECOVERY_AS_BOOT) \
+  	INTERNAL_KERNEL_CMDLINE="$(INTERNAL_KERNEL_CMDLINE)" \
+  	ORANGEFOX_CALLING_CARD="3.0" \
+  	recovery_ramdisk="$(recovery_ramdisk)"
+endif
+# Darth9
+
 $(call declare-container-license-metadata,$(INSTALLED_BOOTIMAGE_TARGET),SPDX-license-identifier-GPL-2.0-only SPDX-license-identifier-Apache-2.0,restricted notice,$(BUILD_SYSTEM)/LINUX_KERNEL_COPYING build/soong/licenses/LICENSE,"Boot Image",bool)
 $(call declare-container-license-deps,$(INSTALLED_BOOTIMAGE_TARGET),$(recoveryimage-deps),$(PRODUCT_OUT)/:/)
 
@@ -2863,6 +2953,34 @@ endif # BUILDING_RECOVERY_IMAGE
 .PHONY: recoveryimage
 recoveryimage: $(INSTALLED_RECOVERYIMAGE_TARGET) $(RECOVERY_RESOURCE_ZIP)
 
+# Darth9 (recovery as recovery)
+ifneq ($(NOT_ORANGEFOX),1)
+ifneq ($(BOARD_USES_RECOVERY_AS_BOOT),true)
+	$(BASH) $(FOX_VENDOR) FOX_VENDOR_CMD="Fox_After_Recovery_Image" \
+  	FOX_MANIFEST_VER="14.1" \
+  	BOARD_BOOT_HEADER_VERSION="$(BOARD_BOOT_HEADER_VERSION)" \
+  	TARGET_ARCH="$(TARGET_ARCH)" \
+	TARGET_RECOVERY_ROOT_OUT="$(TARGET_RECOVERY_ROOT_OUT)" \
+	TARGET_VENDOR_RAMDISK_OUT="$(TARGET_VENDOR_RAMDISK_OUT)" \
+	MKBOOTIMG="$(MKBOOTIMG)" \
+	MKBOOTFS="$(MKBOOTFS)" \
+	INTERNAL_RECOVERYIMAGE_ARGS='"$(INTERNAL_RECOVERYIMAGE_ARGS)"' \
+	INTERNAL_MKBOOTIMG_VERSION_ARGS="$(INTERNAL_MKBOOTIMG_VERSION_ARGS)" \
+	BOARD_MKBOOTIMG_ARGS='"$(BOARD_MKBOOTIMG_ARGS)"' \
+	TARGET_OUT="$(TARGET_OUT)" \
+  	COMPRESSION_COMMAND="$(COMPRESSION_COMMAND)" \
+  	INSTALLED_RECOVERYIMAGE_TARGET="$(INSTALLED_RECOVERYIMAGE_TARGET)" \
+  	INSTALLED_BOOTIMAGE_TARGET="$(INSTALLED_BOOTIMAGE_TARGET)" \
+  	BOARD_BOOTIMAGE_PARTITION_SIZE=$(BOARD_BOOTIMAGE_PARTITION_SIZE) \
+  	BOARD_RECOVERYIMAGE_PARTITION_SIZE=$(BOARD_RECOVERYIMAGE_PARTITION_SIZE) \
+  	BOARD_USES_RECOVERY_AS_BOOT=$(BOARD_USES_RECOVERY_AS_BOOT) \
+  	INTERNAL_KERNEL_CMDLINE="$(INTERNAL_KERNEL_CMDLINE)" \
+  	ORANGEFOX_CALLING_CARD="4.0" \
+  	recovery_ramdisk="$(recovery_ramdisk)"
+endif
+endif
+# Darth9
+
 ifneq ($(BOARD_NAND_PAGE_SIZE),)
 $(error MTD device is no longer supported and thus BOARD_NAND_PAGE_SIZE is deprecated.)
 endif
diff --git a/core/config.mk b/core/config.mk
--- a/core/config.mk
+++ b/core/config.mk
@@ -384,7 +384,9 @@ $(foreach var,$(_build_broken_bool_vars), \
   $(if $(filter-out true false,$($(var))), \
     $(error Valid values of $(var) are "true", "false", and "". Not "$($(var))")))
 
-.KATI_READONLY := $(_build_broken_var_names)
+# Darth9: comment this out (for broken plugins global support)
+#.KATI_READONLY := $(_build_broken_var_names)
+# Darth9
 
 # Returns true if it is a low memory device, otherwise it returns false.
 define is-low-mem-device
@@ -753,6 +755,20 @@ EXTRACT_KERNEL := build/make/tools/extract_kernel.py
 # Path to tools.jar
 HOST_JDK_TOOLS_JAR := $(ANDROID_JAVA8_HOME)/lib/tools.jar
 
+# Darth9
+# OrangeFox post script
+FOX_CURRENT_DEV_STR := $(shell git -C bootable/recovery log -1 --format='%ad (%h)' --date=short)
+ifdef NOT_ORANGEFOX
+  FOX_VENDOR :=
+  BASH :=
+else
+  FOX_VENDOR := vendor/recovery/OrangeFox_A14.sh
+  BASH := bash
+  # broken plugins global support
+  BUILD_BROKEN_PLUGIN_VALIDATION := soong-libaosprecovery_defaults soong-libguitwrp_defaults soong-libminuitwrp_defaults soong-vold_defaults
+endif
+# Darth9
+
 APICHECK_COMMAND := $(JAVA) -Xmx4g -jar $(APICHECK)
 
 # Boolean variable determining if the allow list for compatible properties is enabled
diff --git a/make/envsetup.sh b/make/envsetup.sh
--- a/make/envsetup.sh
+++ b/make/envsetup.sh
@@ -407,6 +407,14 @@ function printconfig()
         return
     fi
     get_build_var report_config
+
+    # Darth9
+    if [ "$NOT_ORANGEFOX" != "1" ]; then
+    	local DEVICE=$(cut -d'_' -f2 <<<$TARGET_PRODUCT)
+    	mkdir -p /tmp/$DEVICE
+    	export > /tmp/$DEVICE/fox_env.sh
+    fi
+    # Darth9
 }
 
 function set_stuff_for_environment()
@@ -2115,3 +2123,45 @@ addcompletions
 export ANDROID_BUILD_TOP=$(gettop)
 
 . $ANDROID_BUILD_TOP/vendor/twrp/build/envsetup.sh
+
+#
+# Darth9
+# prepare environment variables for importing to OrangeFox_A14.sh
+function orangefox_envsetup() {
+
+    export FOX_MANIFEST_ROOT=$(gettop)
+
+    if [ -z "$NOT_ORANGEFOX" ]; then
+       if [ ! -f $FOX_MANIFEST_ROOT/bootable/recovery/orangefox_defaults.go -a ! -f $FOX_MANIFEST_ROOT/bootable/recovery/orangefox.mk ]; then
+   	  export NOT_ORANGEFOX=1
+       fi
+    fi
+
+    if [ "$NOT_ORANGEFOX" = "1" ]; then
+        echo "- Not OrangeFox! ..."
+        return
+    fi
+
+    unset NOT_ORANGEFOX
+    export ALLOW_MISSING_DEPENDENCIES=true
+    
+    if [ -z "$OUT_DIR" ]; then
+       if [ -n "$OUT" ]; then
+          export OUT_DIR="$OUT"
+       else
+          export OUT_DIR="$FOX_MANIFEST_ROOT/out"
+          export OUT="$OUT_DIR"
+       fi
+    else
+    	if [ -z "$OUT" ]; then
+       	   export OUT="$OUT_DIR"
+    	fi
+    fi
+
+#   [ -s $FOX_MANIFEST_ROOT/frameworks/base/services/core/xsd/vts/Android.bp ] && echo -n "" > $FOX_MANIFEST_ROOT/frameworks/base/services/core/xsd/vts/Android.bp
+}
+
+orangefox_envsetup
+
+# Darth9
+#
